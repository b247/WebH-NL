server {
	listen 80;
	listen 443 ssl http2;
	server_name {SITE_NAME};
	if ($scheme = http) {
		return 301 https://$server_name$request_uri;
	}
	error_log /var/www/{SITE_NAME}/logs/error_log-nginx;
	access_log /var/www/{SITE_NAME}/logs/access_log-nginx;
	client_max_body_size 100M;
	
	### SSL configuration, Let's Encrypt
	# http://www.b247.eu.org/2017/03/hight-quality-free-https-encryption-for.html
	ssl_certificate /etc/letsencrypt/live/{SITE_NAME}/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/{SITE_NAME}/privkey.pem;
	
	ssl_session_cache shared:SSL:20m;
	ssl_session_timeout 180m;
	ssl_session_tickets off;
	ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
	ssl_prefer_server_ciphers on;
	ssl_ciphers ECDH+AESGCM:ECDH+AES256:ECDH+AES128:DH+3DES:!ADH:!AECDH:!MD5;
	
	#Diffie-Hellman key exchange
	ssl_dhparam /etc/letsencrypt/dhparam.pem;
	
	#OCSP stapling
	ssl_stapling on;
	ssl_stapling_verify on;
	ssl_trusted_certificate /etc/letsencrypt/live/{SITE_NAME}/chain.pem;
	
	### SSL client auth
	#ssl_client_certificate /etc/www/ccerts/{SITE_NAME}.crt;
	#ssl_verify_client optional; #`optional` or `on` if you require client key
	
	### Secure headers
	#HSTS
	add_header Strict-Transport-Security "max-age=31536000" always;
	
	add_header X-Frame-Options "SAMEORIGIN";
	add_header X-XSS-Protection "1; mode=block";
	add_header X-Content-Type-Options nosniff;
	add_header Referrer-Policy "same-origin";
	
	#CSP
	add_header Content-Security-Policy "default-src https: data: 'unsafe-inline' 'unsafe-eval'; connect-src https: wss:";
  
	
	location ~ /\.git {
		 deny all;
	}
	
	location / {
		proxy_pass http://127.0.0.1:8080;
		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto $scheme;
		
		#proxy_set_header  VERIFIED $ssl_client_verify;
 		#proxy_set_header  DN $ssl_client_s_dn;
	}
	
	#Static Files
	location ~ ^/(css|images|jslibs|uFiles/public)/ {
		root /var/www/{SITE_NAME}/public;
		access_log off;
		log_not_found off; 
		expires max;
	}		
	
	#NodeJS Applications
	location /nodeapp/ {
		access_log off;
		proxy_pass http://io_nodes/;
		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection 'upgrade';
		proxy_set_header Host $host;
		proxy_cache_bypass $http_upgrade;
	}
	
}
